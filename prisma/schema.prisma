// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Asset {
  id              Int      @id @default(autoincrement())
  assetCategory   String
  serialNumber    String   @unique
  faCode          String
  departmentName  String
  location        String
  status          String
  assetRemarks    String?
  vendorName      String
  make            String
  modelNumber     String
  gst             String
  dateAcquired    DateTime
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  history         AssetHistory[]
  software        Software[]
}

model AssetHistory {
  id          Int      @id @default(autoincrement())
  assetId     Int
  modifiedDate DateTime
  userId      String
  status      String
  modifiedBy  String
  lastVisited DateTime
  asset       Asset    @relation(fields: [assetId], references: [id])
}

model Software {
  id          Int      @id @default(autoincrement())
  name        String
  version     String
  licenseKey  String?
  expiryDate  DateTime?
  assetId     Int
  asset       Asset    @relation(fields: [assetId], references: [id])
}

model Vendor {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  contact     String?
  email       String?
  phone       String?
  address     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model PurchaseOrder {
  id          Int      @id @default(autoincrement())
  poNumber    String   @unique
  requestor   String
  vendorId    Int
  startDate   DateTime
  endDate     DateTime
  status      String
  vendor      Vendor   @relation(fields: [vendorId], references: [id])
}

model LicenseRenewal {
  id          Int      @id @default(autoincrement())
  softwareId  Int
  expiryDate  DateTime
  status      String
  software    Software @relation(fields: [softwareId], references: [id])
}

model IdCode {
  id          Int      @id @default(autoincrement())
  code        String   @unique
  description String?
}

model User {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  name        String
  role        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
} 